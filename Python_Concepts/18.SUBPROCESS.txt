python subprocess allows to spawn a new process and get their return codes.


1.) Python subprocess call()- This function is used to run a command and get the return code of the command.

print(subprocess.call(["pwd", "-P"]))
print(subprocess.call('ls -l', shell=True))
if shell=True this means treat complete string as a command.


2.) Python subprocess run()-

print(subprocess.run(["pwd", "-P"]))
run and call are same but call does not support input and check parameters.


3.) Python subprocess check_call()-

This function works like call() function but if there was an error in running the specified command,
it raises a CalledProcessError exception.
print(subprocess.check_call("false"))


4.) Python subprocess check_output()-

When we use the call() function to run a command, the output is bound to the parent process and is unretrievable for the calling program.
We can use the check_output() function to capture the output for later usage.
output = subprocess.check_output(['ls', '-1'])


5.) Python subprocess communicate()-
process = subprocess.Popen(['cat', 'hello.py'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
stdout, stderr = process.communicate()
